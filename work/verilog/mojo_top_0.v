/*
   This file was generated automatically by the Mojo IDE version B1.3.6.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module mojo_top_0 (
    input clk,
    input rst_n,
    output reg [7:0] led,
    output reg spi_miso,
    output reg [3:0] spi_channel,
    output reg avr_rx,
    output reg [23:0] io_led,
    output reg [7:0] io_seg,
    output reg [3:0] io_sel,
    input [23:0] io_dip
  );
  
  
  
  reg rst;
  
  wire [1-1:0] M_reset_cond_out;
  reg [1-1:0] M_reset_cond_in;
  reset_conditioner_1 reset_cond (
    .clk(clk),
    .in(M_reset_cond_in),
    .out(M_reset_cond_out)
  );
  wire [7-1:0] M_seg_seg;
  wire [4-1:0] M_seg_sel;
  reg [16-1:0] M_seg_values;
  multi_seven_seg_2 seg (
    .clk(clk),
    .rst(rst),
    .values(M_seg_values),
    .seg(M_seg_seg),
    .sel(M_seg_sel)
  );
  
  wire [8-1:0] M_add_op;
  wire [1-1:0] M_add_z;
  wire [1-1:0] M_add_v;
  wire [1-1:0] M_add_n;
  reg [8-1:0] M_add_a;
  reg [8-1:0] M_add_b;
  reg [1-1:0] M_add_alufn;
  adder_3 add (
    .a(M_add_a),
    .b(M_add_b),
    .alufn(M_add_alufn),
    .op(M_add_op),
    .z(M_add_z),
    .v(M_add_v),
    .n(M_add_n)
  );
  
  wire [8-1:0] M_compare_op;
  reg [1-1:0] M_compare_z;
  reg [1-1:0] M_compare_v;
  reg [1-1:0] M_compare_n;
  reg [2-1:0] M_compare_alufn;
  comparator_4 compare (
    .z(M_compare_z),
    .v(M_compare_v),
    .n(M_compare_n),
    .alufn(M_compare_alufn),
    .op(M_compare_op)
  );
  
  always @* begin
    M_reset_cond_in = ~rst_n;
    rst = M_reset_cond_out;
    led = 8'h00;
    spi_miso = 1'bz;
    spi_channel = 4'bzzzz;
    avr_rx = 1'bz;
    io_led = 24'h000000;
    io_seg = 8'hff;
    io_seg = ~M_seg_seg;
    io_sel = ~M_seg_sel;
    
    case (io_dip[0+4+1-:2])
      1'h0: begin
        M_seg_values = 16'h0115;
        M_add_a = io_dip[16+7-:8];
        M_add_b = io_dip[8+7-:8];
        M_add_alufn = io_dip[0+0+0-:1];
        io_led[0+7-:8] = M_add_op;
        M_compare_z = 1'h0;
        M_compare_v = 1'h0;
        M_compare_n = 1'h0;
        M_compare_alufn = 8'h00;
      end
      2'h3: begin
        M_seg_values = 16'h2334;
        M_compare_z = M_add_z;
        M_compare_v = M_add_v;
        M_compare_n = M_add_n;
        M_compare_alufn = io_dip[0+1+1-:2];
        io_led[0+7-:8] = M_compare_op;
        M_add_a = io_dip[16+7-:8];
        M_add_b = io_dip[8+7-:8];
        M_add_alufn = io_dip[0+0+0-:1];
      end
      default: begin
        M_seg_values = 16'h5555;
        M_add_a = 8'h00;
        M_add_b = 8'h00;
        M_add_alufn = 8'h00;
        M_compare_z = M_add_z;
        M_compare_v = M_add_v;
        M_compare_n = M_add_n;
        M_compare_alufn = 8'h00;
        io_led[0+7-:8] = 8'h00;
      end
    endcase
    io_led[16+7-:8] = io_dip[16+7-:8];
    io_led[8+7-:8] = io_dip[8+7-:8];
  end
endmodule
